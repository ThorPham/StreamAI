"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[6013],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return m}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(t),m=o,g=f["".concat(s,".").concat(m)]||f[m]||u[m]||i;return t?n.createElement(g,a(a({ref:r},l),{},{components:t})):n.createElement(g,a({ref:r},l))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=t[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},54454:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var n=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],c={},s="TriggerType Enumeration",p={unversionedId:"n3/reference/scapi/framework/services/TriggerType",id:"n3/reference/scapi/framework/services/TriggerType",isDocsHomePage:!1,title:"TriggerType Enumeration",description:"This enumeration represents the type of smart contract triggers. Triggers enable the contract to execute different logic under different usage scenarios.",source:"@site/docs/n3/reference/scapi/framework/services/TriggerType.md",sourceDirName:"n3/reference/scapi/framework/services",slug:"/n3/reference/scapi/framework/services/TriggerType",permalink:"/StreamAI/docs/n3/reference/scapi/framework/services/TriggerType",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/services/TriggerType.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Transaction Class",permalink:"/StreamAI/docs/n3/reference/scapi/framework/services/Transaction"},next:{title:"Neo.SmartContract.Framework.Native",permalink:"/StreamAI/docs/n3/reference/scapi/framework/native"}},l=[{value:"Syntax",id:"syntax",children:[]}],u={toc:l};function f(e){var r=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"triggertype-enumeration"},"TriggerType Enumeration"),(0,i.kt)("p",null,"This enumeration represents the type of smart contract triggers. Triggers enable the contract to execute different logic under different usage scenarios."),(0,i.kt)("p",null,"For more information about triggers, refer to ",(0,i.kt)("a",{parentName:"p",href:"/StreamAI/docs/n3/develop/write/basics"},"Smart Contract Basics"),"."),(0,i.kt)("p",null,"Namespace\uff1a",(0,i.kt)("a",{parentName:"p",href:"/StreamAI/docs/n3/reference/scapi/framework/services"},"Neo.SmartContract.Framework.Services")),(0,i.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,i.kt)("h2",{id:"syntax"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"public enum TriggerType : byte\n{\n    OnPersist = 0x01,\n    PostPersist = 0x02,\n    Verification = 0x20,\n    Application = 0x40,\n    System = OnPersist | PostPersist,\n    All = OnPersist | PostPersist | Verification | Application\n}\n")),(0,i.kt)("p",null,"OnPersist: Indicate that the contract is triggered by the system to execute the OnPersist method of the native contracts."),(0,i.kt)("p",null,"PostPersist: Indicate that the contract is triggered by the system to execute the PostPersist method of the native contracts."),(0,i.kt)("p",null,"Verification: Indicates that the contract is triggered by the verification of a IVerifiable."),(0,i.kt)("p",null,"Application: Indicates that the contract is triggered by the execution of transactions."),(0,i.kt)("p",null,"System: The combination of all system triggers."),(0,i.kt)("p",null,"All: The combination of all triggers."))}f.isMDXComponent=!0}}]);