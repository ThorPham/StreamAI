"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[4990],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(u,".").concat(f)]||d[f]||i[f]||o;return n?r.createElement(m,p(p({ref:t},l),{},{components:n})):r.createElement(m,p({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,p[1]=c;for(var s=2;s<o;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},99187:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),p=["components"],c={},u="supportedStandards Method",s={unversionedId:"n3/reference/governance_api/supportedStandards",id:"n3/reference/governance_api/supportedStandards",isDocsHomePage:!1,title:"supportedStandards Method",description:"Returns supported NEP standards.",source:"@site/docs/n3/reference/governance_api/supportedStandards.md",sourceDirName:"n3/reference/governance_api",slug:"/n3/reference/governance_api/supportedStandards",permalink:"/StreamAI/docs/n3/reference/governance_api/supportedStandards",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/governance_api/supportedStandards.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"onPersist Method",permalink:"/StreamAI/docs/n3/reference/governance_api/onPersist"},next:{title:"symbol Method",permalink:"/StreamAI/docs/n3/reference/governance_api/symbol"}},l=[{value:"Contract",id:"contract",children:[]},{value:"Example",id:"example",children:[]}],i={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"supportedstandards-method"},"supportedStandards Method"),(0,o.kt)("p",null,"Returns supported NEP standards."),(0,o.kt)("h2",{id:"contract"},"Contract"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NativeContract\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Request content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'var result = Contract.Call(nativeHash, "supportedStandards", new object[] { });\n')),(0,o.kt)("p",null,"Respond content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "Array",\n    "value": [{\n        "type": "ByteString",\n        "value": "NEP-5"\n    }, {\n        "type": "ByteString",\n        "value": "NEP-10"\n    }]\n}\n')),(0,o.kt)("p",null,"Respond description:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Array type: supported NEP standards successfully requested.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Others: failed."))))}d.isMDXComponent=!0}}]);