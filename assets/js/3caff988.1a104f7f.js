"use strict";(self.webpackChunkneo_dev_portal=self.webpackChunkneo_dev_portal||[]).push([[7993],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(r),m=i,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||a;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},68047:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return f}});var n=r(87462),i=r(63366),a=(r(67294),r(3905)),o=["components"],s={},l="FindOptions Enumeration",c={unversionedId:"n3/reference/scapi/framework/services/FindOptions",id:"n3/reference/scapi/framework/services/FindOptions",isDocsHomePage:!1,title:"FindOptions Enumeration",description:"Defines find options for searching storage. This is used in the Storage.Find method.",source:"@site/docs/n3/reference/scapi/framework/services/FindOptions.md",sourceDirName:"n3/reference/scapi/framework/services",slug:"/n3/reference/scapi/framework/services/FindOptions",permalink:"/StreamAI/docs/n3/reference/scapi/framework/services/FindOptions",editUrl:"https://github.com/neo-project/neo-dev-portal/blob/master/docs/n3/reference/scapi/framework/services/FindOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Crypto Class",permalink:"/StreamAI/docs/n3/reference/scapi/framework/services/Crypto"},next:{title:"Iterator Class",permalink:"/StreamAI/docs/n3/reference/scapi/framework/services/Iterator"}},p=[{value:"Syntax",id:"syntax",children:[]}],u={toc:p};function f(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"findoptions-enumeration"},"FindOptions Enumeration"),(0,a.kt)("p",null,"Defines find options for searching storage. This is used in the Storage.Find method."),(0,a.kt)("p",null,"Namespace: Neo.SmartContract"),(0,a.kt)("p",null,"Assembly: Neo.SmartContract.Framework"),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"public enum FindOptions : byte\n{\n    None = 0,\n\n    KeysOnly = 1 << 0,\n    RemovePrefix = 1 << 1,\n    ValuesOnly = 1 << 2,\n    DeserializeValues = 1 << 3,\n    PickField0 = 1 << 4,\n    PickField1 = 1 << 5\n}\n")),(0,a.kt)("h5",{id:"description"},"Description"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"None: Search all")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"KeysOnly: Search Key only. It cannot be used together with ValuesOnly, DeserializeValues, PickField0, and PickField1.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"RemovePrefix: Similar to KeysOnly. It will filter to the first byte of Key, i.e., the prefix of Key. It cannot be used together with ValuesOnly")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"ValuesOnly: Search Value only. It cannot be used together with KeysOnly and RemovePrefix.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"DeserializeValues: Search Value and then deserialize the Value.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"PickField0: Search the first element of Value array. It must be used together with DeserializeValues, not with PickField1.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"PickField1: Search the second element of Value array. It must be used together with DeserializeValues, not with PickField0.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"FindOptions is used in ",(0,a.kt)("a",{parentName:"p",href:"/StreamAI/docs/n3/reference/scapi/framework/services/Storage/Find"},"Storage.Find(StorageContext, ByteString, FindOptions)")))))}f.isMDXComponent=!0}}]);